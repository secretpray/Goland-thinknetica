package hw

import (
	"fmt"
	"math"
)

type Geom struct {
	X1, Y1, X2, Y2 float64
}

func (geom *Geom) CalculateDistance() (float64, error) {
	if geom.X1 < 0 || geom.X2 < 0 || geom.Y1 < 0 || geom.Y2 < 0 {
		return 0, fmt.Errorf("Координаты не могут быть меньше нуля")
	}

	distance := math.Sqrt(math.Pow(geom.X2-geom.X1, 2) + math.Pow(geom.Y2-geom.Y1, 2))
	return distance, nil
}

// Изменен ресивер метода CalculateDistance так, чтобы он работал с указателем на структуру Geom
// Если координаты меньше 0, вы печатаете сообщение об ошибке и возвращаете -1, что не является правильным способом обработки ошибок в Go.
// Вместо этого, необходимо вернуть ошибку типа error, чтобы вызывающий код мог обработать ее по своему усмотрению. Измените возвращаемое значение функции на error.
// Проверка на отрицательные координаты должна быть сделана до вычисления расстояния. Вы должны сначала проверить условие, и если оно выполняется, вернуть ошибку, иначе продолжить вычисление расстояния.
// Перед возвращением ошибки, вы должны использовать функцию fmt.Errorf для создания кастомного текста ошибки.
